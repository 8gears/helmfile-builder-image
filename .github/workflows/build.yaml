name: build

on:
  push:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Login to C8N
        uses: docker/login-action@v2.0.0
        with:
          registry: 8gears.container-registry.com
          username: robot_cicd_lib
          password: ${{ secrets.C8N_PUSH_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.10.0
        env:
          HELMFILE_VERSION: 0.140.0
        with:
          context: .
          push: true
          build-args: |
            HELMFILE_VERSION: ${{env.HELMFILE_VERSION}}
          tags: |
            8gears/helmfile-builder-image
            8gears/helmfile-builder-image:${{env.HELMFILE_VERSION}}
            8gears.container-registry.com/library/helmfile-builder-image
            8gears.container-registry.com/library/helmfile-builder-image:${{env.HELMFILE_VERSION}}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
